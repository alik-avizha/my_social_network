{"version":3,"file":"static/js/546.389691fd.chunk.js","mappings":"wNACA,EAAqC,yCAArC,EAAuF,6BAAvF,EAAqI,qC,SCiDpI,EAzCoB,WAEjB,IAAMA,GAAUC,EAAAA,EAAAA,KAAsC,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,SACvEC,GAAWC,EAAAA,EAAAA,MAEjB,GAAqBC,EAAAA,EAAAA,KAAdC,GAAP,gBAEAC,EAAAA,EAAAA,YAAU,WACNJ,GAASK,EAAAA,EAAAA,SACX,IAEF,IAKIC,EAAS,IAAIC,OAAO,GAAI,MAE5B,GAA4BC,EAAAA,EAAAA,UAASF,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAIMC,EAFsBhB,EAAQc,QAAO,SAAAG,GAAE,OAAIH,EAAOI,KAAKD,EAAGE,SAEtBC,KAAI,SAAAC,GAAO,OAAI,SAAC,IAAD,CACSC,GAAID,EAAQC,GACZH,KAAME,EAAQF,KACdI,MAAOF,EAAQG,OAAOC,OAHjBJ,EAAQC,OAM/E,OACI,iBAAKI,UAAWC,EAAhB,WACI,0BACI,kBAAOD,UAAWC,EAAgBC,KAAK,SAASC,YAAY,uBACrDC,SArBE,SAACC,GAClB,IAAIpB,EAAS,IAAIC,OAAJ,UAAcmB,EAAEC,cAAcC,OAAS,MACpDlB,EAAUJ,SAqBN,gBAAKuB,IAAK1B,EAAYkB,UAAWC,EAAjC,SACKX","sources":["webpack://samurai-way/./src/components/friends/ui/friends-page.module.css?582b","components/friends/ui/friends-page.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"friendsPageWrapper\":\"friends-page_friendsPageWrapper__x3s2a\",\"search\":\"friends-page_search__QhYJ9\",\"contactElement\":\"friends-page_contactElement__osYwi\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"app/model/redux-store\";\r\nimport {UserType} from \"components/users/model/users-reducer\";\r\nimport {useAutoAnimate} from \"@formkit/auto-animate/react\";\r\nimport {getFriendsThunkCreator} from \"components/sidebar/model/sidebar-reducer\";\r\nimport {Friend} from \"components/sidebar/ui/friend/friend\";\r\nimport classes from \"./friends-page.module.css\";\r\n\r\n const FriendsPage = () => {\r\n\r\n    const friends = useSelector<AppStateType, UserType[]>(state => state.sidebar.users)\r\n    const dispatch = useDispatch()\r\n\r\n    const [friendsRef] = useAutoAnimate<HTMLDivElement>();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getFriendsThunkCreator())\r\n    },[])\r\n\r\n    const changeFilter = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        let regExp = new RegExp(`${e.currentTarget.value}`, \"gi\")\r\n        setFilter(regExp)\r\n    }\r\n\r\n    let regExp = new RegExp(\"\", \"gi\")\r\n\r\n    const [filter, setFilter] = useState(regExp)\r\n\r\n    const friendsFilterSearch = friends.filter(el => filter.test(el.name))\r\n\r\n    const friendElement = friendsFilterSearch.map(contact => <Friend  key={contact.id}\r\n                                                                      id={contact.id}\r\n                                                                      name={contact.name}\r\n                                                                      photo={contact.photos.large}\r\n    />)\r\n\r\n    return (\r\n        <div className={classes.friendsPageWrapper}>\r\n            <div>\r\n                <input className={classes.search} type=\"search\" placeholder=\"  Search Contacts...\"\r\n                       onChange={changeFilter}/>\r\n            </div>\r\n            <div ref={friendsRef} className={classes.contactElement}>\r\n                {friendElement}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n export default FriendsPage\r\n"],"names":["friends","useSelector","state","sidebar","users","dispatch","useDispatch","useAutoAnimate","friendsRef","useEffect","getFriendsThunkCreator","regExp","RegExp","useState","filter","setFilter","friendElement","el","test","name","map","contact","id","photo","photos","large","className","classes","type","placeholder","onChange","e","currentTarget","value","ref"],"sourceRoot":""}
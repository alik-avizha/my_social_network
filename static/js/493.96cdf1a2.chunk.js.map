{"version":3,"file":"static/js/493.96cdf1a2.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/users/ui/users.module.css?0d7c","webpack://samurai-way/./src/components/users/ui/user/user.module.css?3b74","components/users/ui/user/user.tsx","webpack://samurai-way/./src/components/users/ui/user-search-form/usersSearchForm.module.css?2aa1","components/users/ui/user-search-form/usersSearchForm.tsx","components/users/ui/users.tsx","components/users/model/users-selectors.ts","components/users/ui/users-container.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersWrapper\":\"users_usersWrapper__lX8OC\",\"users\":\"users_users__Gyr0H\",\"pagination\":\"users_pagination__RrQLn\"};","// extracted by mini-css-extract-plugin\nexport default {\"userWrapper\":\"user_userWrapper__0vdw-\",\"userPhoto\":\"user_userPhoto__z-VdA\",\"userName\":\"user_userName__u5iD5\",\"userId\":\"user_userId__Ab0wN\"};","import React from 'react';\r\nimport styles from './user.module.css'\r\nimport userPhoto from '../../../../assets/images/user.jpg'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {UserType} from '../../model/users-reducer';\r\nimport {Button} from 'common/components';\r\n\r\ntype UsersPropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport const User: React.FC<UsersPropsType> = (props) => {\r\n    const {user, followingInProgress, follow, unfollow} = props\r\n\r\n    return (\r\n        <div className={styles.userWrapper}>\r\n            <NavLink to={'/profile/' + user.id}>\r\n                <img src={user.photos.small !== null ? user.photos.small : userPhoto} alt=\"avatar\"\r\n                     className={styles.userPhoto}/>\r\n            </NavLink>\r\n            <span className={styles.userName}>{user.name.length > 8 ? user.name.slice(0, 9) + '...' : user.name}</span>\r\n            <span className={styles.userId}>userId: {props.user.id}</span>\r\n            <div>\r\n                {user.followed\r\n                    ? <Button name={'UnFollow'} callback={() => unfollow(user.id)}\r\n                              disabled={followingInProgress.some(id => id === user.id)}/>\r\n                    : <Button name={'Follow'} callback={() => follow(user.id)}\r\n                              disabled={followingInProgress.some(id => id === user.id)}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formDataWrapper\":\"usersSearchForm_formDataWrapper__EdvtU\",\"sendData\":\"usersSearchForm_sendData__NUBSB\"};","import {Field, Formik} from \"formik\";\r\nimport React, {FC, memo} from \"react\";\r\nimport {SearchType} from \"components/users/model/users-reducer\";\r\nimport s from './usersSearchForm.module.css'\r\n\r\ntype FormType = {\r\n    term: string,\r\n    friend: \"true\" | 'false' | 'null'\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: SearchType) => void\r\n}\r\n\r\nconst userSearchFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors\r\n}\r\nexport const UsersSearchForm: FC<PropsType> = memo(({onFilterChanged}) => {\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filter: SearchType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true'\r\n        }\r\n        onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={{term: '', friend: 'null'}} validate={userSearchFormValidate} onSubmit={submit}>\r\n            {({values, handleSubmit, isSubmitting, handleChange}) => (\r\n                <form onSubmit={handleSubmit} className={s.formDataWrapper}>\r\n                    <input type=\"text\" name=\"term\" onChange={handleChange} value={values.term} placeholder={'type to search...'}/>\r\n                    <Field as=\"select\" name=\"friend\" className={s.select}>\r\n                        <option value=\"null\">all</option>\r\n                        <option value=\"true\">only followed</option>\r\n                        <option value=\"false\">only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting} className={s.sendData}>search</button>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React from 'react';\r\nimport {SearchType, UserType} from '../model/users-reducer';\r\nimport styles from './users.module.css'\r\nimport {User} from './user/user';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport {useAutoAnimate} from \"@formkit/auto-animate/react\";\r\nimport {UsersSearchForm} from \"components/users/ui/user-search-form/usersSearchForm\";\r\n\r\ntype PropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    onFilterChanged: (filter: SearchType) => void\r\n    followingInProgress: Array<number>\r\n}\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n    const {\r\n        users,\r\n        pageSize,\r\n        totalUsersCount,\r\n        follow,\r\n        unfollow,\r\n        onPageChanged,\r\n        followingInProgress,\r\n        onFilterChanged,\r\n        currentPage\r\n    } = props\r\n    const [usersRef] = useAutoAnimate<HTMLDivElement>();\r\n\r\n    return (\r\n        <div className={styles.usersWrapper}>\r\n            <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n            <div ref={usersRef} className={styles.users}>\r\n                {users.map(u => {\r\n                        return (\r\n                            <User key={u.id} follow={follow} unfollow={unfollow} user={u}\r\n                                  followingInProgress={followingInProgress}/>\r\n                        )\r\n                    }\r\n                )}\r\n            </div>\r\n            <div className={styles.pagination}>\r\n                <Pagination count={Math.ceil(totalUsersCount / pageSize)}\r\n                            page={currentPage}\r\n                            onChange={(e: React.ChangeEvent<unknown>, value: number) => onPageChanged(value)}\r\n                            sx={{\r\n                                button: {\r\n                                    borderRadius: '2px',\r\n                                    marginRight: '20px',\r\n                                    marginLeft: '0px',\r\n                                    width: '24px',\r\n                                    height: '24px',\r\n                                    padding: '4px 8px',\r\n                                    fontSize: '14px',\r\n                                    fontWeight: 400,\r\n                                    backgroundColor: 'transparent',\r\n                                    '&:hover': {\r\n                                        backgroundColor: '#0066CC',\r\n                                        color: '#fff',\r\n                                    },\r\n                                    '&.Mui-selected': {\r\n                                        backgroundColor: '#0066CC',\r\n                                        color: '#fff',\r\n                                    },\r\n                                },\r\n                            }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {AppStateType} from 'app/model/redux-store';\r\nimport {SearchType, UserType} from './users-reducer';\r\nimport {createSelector} from 'reselect';\r\n\r\nconst getUsersSelector = (state: AppStateType): UserType[] => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector,(users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType): number => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType): number => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: AppStateType): number => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType): boolean => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType): Array<number> => {\r\n    return state.usersPage.followingInProgress\r\n}\r\nexport const getUsersFilter = (state: AppStateType): SearchType => {\r\n    return state.usersPage.filter\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from 'app/model/redux-store';\r\nimport {\r\n    followThunkCreator,\r\n    getUsersThunkCreator,\r\n    SearchType,\r\n    unfollowThunkCreator,\r\n    UserType\r\n} from '../model/users-reducer';\r\nimport {Users} from './users';\r\nimport {Preloader} from 'common/components';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers, getUsersFilter\r\n} from '../model/users-selectors';\r\nimport {withAuthRedirect} from 'common/hoc';\r\n\r\ntype MapStateToProps = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    filter: SearchType\r\n}\r\ntype MapDispatchTopProps = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number, filter: SearchType) => void\r\n}\r\n\r\ntype PropsType = MapStateToProps & MapDispatchTopProps\r\n\r\nexport class UsersContainerSecond extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize, filter} = this.props\r\n        this.props.getUsers(currentPage, pageSize, filter)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.getUsers(1, this.props.pageSize, {term: '', friend: null})\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize, filter} = this.props\r\n        this.props.getUsers(pageNumber, pageSize, filter)\r\n    }\r\n\r\n    onFilterChanged = (filter: SearchType) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(1, pageSize, filter)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching\r\n                    ? <Preloader/>\r\n                    : null}\r\n                <Users\r\n                    users={this.props.users}\r\n                    pageSize={this.props.pageSize}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    onFilterChanged={this.onFilterChanged}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state: AppStateType): MapStateToProps => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        filter: getUsersFilter(state)\r\n    }\r\n}\r\n\r\nconst UsersContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow: followThunkCreator,\r\n        unfollow: unfollowThunkCreator,\r\n        getUsers: getUsersThunkCreator\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainerSecond)\r\n\r\nexport default UsersContainer"],"names":["User","props","user","followingInProgress","follow","unfollow","className","styles","to","id","src","photos","small","userPhoto","alt","name","length","slice","followed","callback","disabled","some","userSearchFormValidate","values","UsersSearchForm","memo","onFilterChanged","initialValues","term","friend","validate","onSubmit","setSubmitting","filter","handleSubmit","isSubmitting","handleChange","s","type","onChange","value","placeholder","as","Users","users","pageSize","totalUsersCount","onPageChanged","currentPage","useAutoAnimate","usersRef","ref","map","u","Pagination","count","Math","ceil","page","e","sx","button","borderRadius","marginRight","marginLeft","width","height","padding","fontSize","fontWeight","backgroundColor","color","getUsers","createSelector","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getUsersFilter","UsersContainerSecond","pageNumber","this","React","compose","connect","followThunkCreator","unfollowThunkCreator","getUsersThunkCreator","withAuthRedirect"],"sourceRoot":""}
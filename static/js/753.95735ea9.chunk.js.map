{"version":3,"file":"static/js/753.95735ea9.chunk.js","mappings":"qSAeaA,EAA0C,SAACC,GAEDA,EAA5CC,MAAP,MAAmDD,EAArCE,KAAOC,EAArB,EAAqBA,QAAUC,EAA/B,EAA+BA,MAAQC,EAAYL,EAAZK,SAEjCC,EAAWH,GAAWC,EAC5B,OACI,iCAAKG,UAAWC,EAAAA,EAAAA,YAAsB,KAAOF,EAAWE,EAAAA,EAAAA,MAAgB,KAASR,GAAjF,eACI,yBAAMK,IACLC,IAAY,0BAAOF,SAKnBK,EAAoC,SAACT,GAC9C,IAAOC,EAA6BD,EAA7BC,MAAgBS,GAAaV,EAAtBE,MAAd,OAAoCF,EAApC,IACA,OACI,SAACD,GAAD,kBAAiBC,GAAjB,cACI,oCAAWC,GAAWS,QAKrBC,EAAuC,SAACX,GACjD,IAAOC,EAA6BD,EAA7BC,MAAgBS,GAAaV,EAAtBE,MAAd,OAAoCF,EAApC,IACA,OACI,SAACD,GAAD,kBAAiBC,GAAjB,cACI,uCAAcC,GAAWS,QAKxBE,EAAc,SAACC,EACAC,EACAC,EACAC,EACAhB,GACuB,IAAvBiB,EAAsB,uDAAP,GACvC,OACI,4BACI,SAAC,KAAD,QAAOJ,YAAaA,EACbC,KAAMA,EACNE,UAAWA,EACXE,SAAUH,GACNf,IACViB,O,oHCzBPE,GAAiBC,EAAAA,EAAAA,GAAwB,CAACC,KAAM,SAA/BD,EAXsC,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAclB,EAAW,EAAXA,MACzE,OACI,kBAAMmB,SAAUD,EAAhB,WACKV,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACY,EAAAA,GAAWf,EAAAA,KAC1CG,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACY,EAAAA,GAAWf,EAAAA,GAAO,CAACgB,KAAM,cAC9Db,EAAAA,EAAAA,IAAY,GAAI,aAAc,GAAIH,EAAAA,GAAO,CAACgB,KAAM,YAAY,eAC5DrB,IAAS,gBAAKG,UAAWC,EAAAA,EAAAA,iBAAhB,SAA2CJ,KACrD,4CAwBZ,WAAesB,EAAAA,EAAAA,KAJO,SAACC,GAAD,MAA+C,CACjEC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,MAAOC,EAAAA,IAAhD,EAlBc,SAAC/B,GAIX,OAAIA,EAAM4B,QAAe,SAAC,KAAD,CAAUI,GAAI,cAGnC,4BACI,mCACA,SAACb,EAAD,CAAgBI,SARP,SAACU,GACdjC,EAAM8B,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,sB,4ECtCzD,IAAMZ,EAAW,SAACa,GACrB,IAAIA,EACJ,MAAO,qBAIEC,EAAmB,SAACC,GAAD,OAAuB,SAACF,GACpD,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCNlC,KAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB","sources":["components/common/FormsControls/FormsControls.tsx","components/login/Login.tsx","utils/validators/validators.ts","webpack://samurai-way/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import React from 'react';\r\nimport classes from './FormsControls.module.css'\r\nimport {Field} from 'redux-form';\r\n\r\ntype FormControlProps = {\r\n    input: {\r\n        name: string;\r\n    };\r\n    meta: {\r\n        touched?: boolean;\r\n        error?: string;\r\n    }\r\n    children: React.ReactNode\r\n};\r\n\r\nexport const FormControl: React.FC<FormControlProps> = (props) => {\r\n\r\n    const {input, meta: {touched , error}, children} = props\r\n\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={classes.formControl + ' ' + (hasError ? classes.error : '')} {...props}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Input: React.FC<FormControlProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport const Textarea: React.FC<FormControlProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport const createField = (placeholder: string,\r\n                            name: string,\r\n                            validators: any[],\r\n                            component: React.FC<FormControlProps>,\r\n                            props?: { type: string },\r\n                            text: string = '') => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   component={component}\r\n                   validate={validators}\r\n                   {...props}/>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {createField, Input} from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {loginThunkCreator} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport classes from '../common/FormsControls/FormsControls.module.css'\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMy: boolean\r\n}\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\ntype LoginPropsType = MapDispatchToPropsType & MapStateToPropsType\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField('', 'rememberMy', [], Input, {type: 'checkbox'},'remember my')}\r\n            {error && <div className={classes.formSummaryError}>{error}</div>}\r\n            <button>Login</button>\r\n        </form>\r\n    );\r\n};\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: LoginPropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMy)\r\n    }\r\n    if (props.isAuth) return <Redirect to={'/profile'}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login: loginThunkCreator,})(Login)\r\n","export const required = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__4tOrb\",\"error\":\"FormsControls_error__Q4DIq\",\"formSummaryError\":\"FormsControls_formSummaryError__u8JeD\"};"],"names":["FormControl","props","input","meta","touched","error","children","hasError","className","classes","Input","restProps","Textarea","createField","placeholder","name","validators","component","text","validate","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","type","connect","state","isAuth","auth","login","loginThunkCreator","to","formData","email","password","rememberMy","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}
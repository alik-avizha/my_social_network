{"version":3,"file":"static/js/582.aa7ae0eb.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/common/FormsControls/FormsControls.module.css?eb50","components/common/FormsControls/FormsControls.tsx","webpack://samurai-way/./src/components/login/login.module.css?e6ba","utils/validators/validators.ts","../node_modules/@mui/material/FormLabel/formLabelClasses.js","../node_modules/@mui/material/FormLabel/FormLabel.js","../node_modules/@mui/material/FormControl/formControlState.js","components/login/loginForm/LoginForm.tsx","components/login/Login.tsx","webpack://samurai-way/./src/components/login/loginForm/loginForm.module.css?13e1"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__4tOrb\",\"error\":\"FormsControls_error__Q4DIq\",\"formSummaryError\":\"FormsControls_formSummaryError__u8JeD\"};","import React from 'react';\r\nimport classes from './FormsControls.module.css'\r\nimport {Field} from 'redux-form';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\ntype FormControlProps = {\r\n    input: {\r\n        name: string;\r\n    };\r\n    meta: {\r\n        touched?: boolean;\r\n        error?: string;\r\n    }\r\n    children: React.ReactNode\r\n};\r\n\r\nexport const FormControl: React.FC<FormControlProps> = (props) => {\r\n\r\n    const {input, meta: {touched , error}, children} = props\r\n\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={classes.formControl + ' ' + (hasError ? classes.error : '')} {...props}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Input: React.FC<FormControlProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport const Textarea: React.FC<FormControlProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    );\r\n};\r\nexport const CheckboxWrapper: React.FC<FormControlProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <Checkbox {...input} {...restProps} />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport const createField = (placeholder: string,\r\n                            name: string,\r\n                            validators: any[],\r\n                            component: React.FC<FormControlProps>,\r\n                            props?: { type: string },\r\n                            text: string = '') => {\r\n    return (\r\n        <div style={{display:'flex', gap: '10px', justifyContent: 'center', alignItems: 'center', color: 'black'}}>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   component={component}\r\n                   validate={validators}\r\n                   {...props}/>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loginWrapper\":\"login_loginWrapper__Cpe58\",\"title\":\"login_title__XfTe2\"};","export const required = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormLabel', slot);\n}\nconst formLabelClasses = generateUtilityClasses('MuiFormLabel', ['root', 'colorSecondary', 'focused', 'disabled', 'error', 'filled', 'required', 'asterisk']);\nexport default formLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\nexport const FormLabelRoot = styled('label', {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return _extends({}, styles.root, ownerState.color === 'secondary' && styles.colorSecondary, ownerState.filled && styles.filled);\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, theme.typography.body1, {\n  lineHeight: '1.4375em',\n  padding: 0,\n  position: 'relative',\n  [`&.${formLabelClasses.focused}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${formLabelClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled\n  },\n  [`&.${formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n  const {\n      children,\n      className,\n      component = 'label'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  const ownerState = _extends({}, props, {\n    color: fcs.color || 'primary',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      ownerState: ownerState,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormLabel;","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n    return acc;\n  }, {});\n}","import React from 'react';\r\nimport {InjectedFormProps, reduxForm} from 'redux-form';\r\nimport classes from './loginForm.module.css';\r\nimport {CheckboxWrapper, createField, Input} from '../../common/FormsControls/FormsControls';\r\nimport {required} from '../../../utils/validators/validators';\r\nimport {FormLabel} from '@mui/material';\r\n\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMy: boolean\r\n    captcha: string\r\n}\r\ntype LoginFormOwnProp = {\r\n    captcha: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType, LoginFormOwnProp> & LoginFormOwnProp> = ({\r\n                                                                                                       handleSubmit,\r\n                                                                                                       error,\r\n                                                                                                       captcha\r\n                                                                                                   }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={classes.formControl}>\r\n            <FormLabel className={classes.formLabel}>\r\n                <p>\r\n                    To log in get registered <a href={'https://social-network.samuraijs.com/'}\r\n                                                target={'_blank'} rel=\"noreferrer\">here</a>\r\n                </p>\r\n                <p>\r\n                    or use common test account credentials:\r\n                </p>\r\n                <p> Email: free@samuraijs.com\r\n                </p>\r\n                <p>\r\n                    Password: free\r\n                </p>\r\n            </FormLabel>\r\n            <div className={classes.email}>\r\n                {createField('Email', 'email', [required], Input)}\r\n            </div>\r\n            <div className={classes.password}>\r\n                {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            </div>\r\n            <div className={classes.rememberMy}>\r\n                {createField('', 'rememberMy', [], CheckboxWrapper, {type: 'checkbox'}, 'remember my')}\r\n            </div>\r\n            {captcha && <img className={classes.captcha} src={captcha} alt={'captcha'}/>}\r\n            {captcha && createField('Symbols from image', 'captcha', [required], Input)}\r\n            {error && <div className={classes.formSummaryError}>{error}</div>}\r\n            <button className={classes.btn}>Login</button>\r\n        </form>\r\n    );\r\n};\r\nexport const LoginReduxForm = reduxForm<FormDataType, LoginFormOwnProp>({form: 'login'})(LoginForm)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {loginThunkCreator} from '../../redux/auth/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport styles from './login.module.css'\r\nimport {FormDataType, LoginReduxForm} from './loginForm/LoginForm';\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    captcha: string | null\r\n}\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captchaUrl: string) => void\r\n}\r\ntype LoginPropsType = MapDispatchToPropsType & MapStateToPropsType\r\n\r\nconst Login = (props: LoginPropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMy, formData.captcha)\r\n    }\r\n    if (props.isAuth) return <Redirect to={'/profile'}/>\r\n\r\n    return (\r\n        <div className={styles.loginWrapper}>\r\n            <span className={styles.title}>Login</span>\r\n            <LoginReduxForm onSubmit={onSubmit} captcha={props.captcha}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    captcha: state.auth.captcha,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login: loginThunkCreator,})(Login)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"loginForm_formControl__u6OBx\",\"formLabel\":\"loginForm_formLabel__Lnxv6\",\"rememberMy\":\"loginForm_rememberMy__vgFuE\",\"captcha\":\"loginForm_captcha__UlzRG\",\"btn\":\"loginForm_btn__7B8je\",\"formSummaryError\":\"loginForm_formSummaryError__suXwL\"};"],"names":["FormControl","props","input","meta","touched","error","children","hasError","className","classes","Input","restProps","Textarea","CheckboxWrapper","Checkbox","createField","placeholder","name","validators","component","text","style","display","gap","justifyContent","alignItems","color","Field","validate","required","value","getFormLabelUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormLabelRoot","styled","overridesResolver","styles","ownerState","_extends","root","colorSecondary","filled","theme","vars","palette","secondary","typography","body1","lineHeight","padding","position","formLabelClasses","main","disabled","AsteriskComponent","asterisk","FormLabel","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","fcs","states","muiFormControl","reduce","acc","state","formControlState","useFormControl","focused","slots","capitalize","composeClasses","useUtilityClasses","_jsxs","as","clsx","LoginReduxForm","reduxForm","form","handleSubmit","captcha","onSubmit","href","target","rel","type","src","alt","connect","auth","isAuth","login","loginThunkCreator","to","formData","email","password","rememberMy"],"sourceRoot":""}
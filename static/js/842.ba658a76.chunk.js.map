{"version":3,"file":"static/js/842.ba658a76.chunk.js","mappings":"6LACA,EAA8B,+BAA9B,EAAwE,4BAAxE,EAA8G,2BAA9G,EAAwJ,gCAAxJ,EAAiM,0BAAjM,EAAkO,wBAAlO,EAAiQ,wBAAjQ,EAAuS,+B,4BCIjSA,EAAY,IAAIC,UAAU,gEAgBhC,EARiB,WACb,OACI,gBAAKC,UAAWC,EAAhB,UACI,SAACC,EAAD,OAONA,EAAO,WAKT,OACI,4BACI,SAACC,EAAD,KACA,SAAC,KAAD,CAAaC,SAPD,SAACC,GACjBP,EAAUQ,KAAKD,IAMyBE,YAAa,yBAKvDJ,EAAe,WAEjB,OAAgCK,EAAAA,EAAAA,UAA4B,IAA5D,eAAOC,EAAP,KAAiBC,EAAjB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACNb,EAAUc,iBAAiB,WAAW,SAACC,GACnCH,GAAY,SAACI,GAAD,wBAAoBA,IAApB,OAAqCC,KAAKC,MAAMH,EAAEI,gBAEnE,KAGC,gBAAKjB,UAAWC,EAAhB,gBACKQ,QADL,IACKA,OADL,EACKA,EAAUS,KAAI,SAACC,GAAD,OAAO,SAACC,EAAD,CAA4BC,MAAOF,EAAEE,MAAOC,SAAUH,EAAEG,SAC3CC,QAASJ,EAAEI,SADNJ,EAAEK,cAWhDJ,EAAwC,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAC7D,OACI,gBAAKvB,UAAWC,EAAhB,UACI,iBAAKD,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAUwB,IAAK,WAC1BC,IAAKL,KAEV,iBAAKrB,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,SAAC0B,EAAA,EAAD,CAAYC,QAAS,YAArB,SAAmCN,OAEvC,gBAAKtB,UAAWC,EAAhB,UACI,SAAC0B,EAAA,EAAD,CAAYC,QAAS,QAArB,SAA+BL","sources":["webpack://samurai-way/./src/components/chat/ui/chat-page.module.css?b54d","components/chat/ui/chat-page.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chatWrapper\":\"chat-page_chatWrapper__hJnmo\",\"messages\":\"chat-page_messages__aK5je\",\"message\":\"chat-page_message__As1ex\",\"imageAndText\":\"chat-page_imageAndText__uxSB1\",\"avatar\":\"chat-page_avatar__nHf5L\",\"text\":\"chat-page_text__+Khqt\",\"name\":\"chat-page_name__3lMYS\",\"messageText\":\"chat-page_messageText__5NOrs\"};","import React, {FC, useEffect, useState} from 'react';\r\nimport s from './chat-page.module.css'\r\nimport {AddItemForm} from \"common/components\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nconst wsChannel = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\ntype ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\nconst ChatPage = () => {\r\n    return (\r\n        <div className={s.chatWrapper}>\r\n            <Chat/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatPage\r\n\r\nconst Chat = () => {\r\n    const sendMessage = (newMessage: string) => {\r\n        wsChannel.send(newMessage)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChatMessages/>\r\n            <AddItemForm callback={sendMessage} placeholder={'type new message'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ChatMessages = () => {\r\n\r\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\r\n\r\n    useEffect(() => {\r\n        wsChannel.addEventListener('message', (e: MessageEvent) => {\r\n            setMessages((prevMessages)=>[...prevMessages, ...JSON.parse(e.data)])\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={s.messages}>\r\n            {messages?.map((m) => <ChatMessage key={m.userId} photo={m.photo} userName={m.userName}\r\n                                               message={m.message}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype ChatMessagePropsType = {\r\n    photo: string\r\n    userName: string\r\n    message: string\r\n}\r\nconst ChatMessage: FC<ChatMessagePropsType> = ({photo, userName, message}) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.imageAndText}>\r\n                <img className={s.avatar} alt={'myAvatar'}\r\n                     src={photo}\r\n                />\r\n                <div className={s.text}>\r\n                    <div className={s.name}>\r\n                        <Typography variant={\"subtitle1\"}>{userName}</Typography>\r\n                    </div>\r\n                    <pre className={s.messageText}>\r\n                        <Typography variant={\"body2\"}>{message}</Typography>\r\n                    </pre>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"names":["wsChannel","WebSocket","className","s","Chat","ChatMessages","callback","newMessage","send","placeholder","useState","messages","setMessages","useEffect","addEventListener","e","prevMessages","JSON","parse","data","map","m","ChatMessage","photo","userName","message","userId","alt","src","Typography","variant"],"sourceRoot":""}